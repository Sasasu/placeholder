syntax = "proto3";

message PackageShard {
  // only 0-127, (1<<8) used for protobuf various flag
  uint32 ttl = 1;
  // raw IP segment, include source address, destination address
  bytes package = 2;
}

// one Node can be described as
// 1. sub_net
// 2. net_mask
// 3. who own then sub_net(the node name)
// 4. the distance to this node
// 5. where this node share from
message Node {
  bytes sub_net = 1;
  uint32 net_mask = 2;

  string name = 5;
  int32 jump = 6;

  // if jump > 0 , means this is a forward node
  // then use this real_host to replace the ip get from `receive_from`
  // else real_ip and port is not set
  bytes real_ip = 7;
  int32 port = 8;
}

// init message, the first message sent by new node
// when node receive this message, send all peer by `add_node` and broadcast
// this node using `add_node`
message Init {
  bytes sub_net = 1;
  uint32 net_mask = 2;

  string name = 5;
  int32 jump = 6;
}

message PingPong { string name = 1; }

message Payload {
  oneof payload {
    // look up route table, send package to next node
    PackageShard package = 1;
    // add some node to route table
    Node add_node = 3;
    // del some node (by name)
    Node del_node = 4;
    // tell this node, what node i known
    PingPong ping = 7;
  }
}
